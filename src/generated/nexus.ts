/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  AssociationType: prisma.AssociationType
  BloomLevel: prisma.BloomLevel
  EntityType: prisma.EntityType
}

export interface NexusGenRootTypes {
  Association: prisma.Association;
  Competency: prisma.Competency;
  ConceptualCategory: prisma.ConceptualCategory;
  Course: prisma.Course;
  Issuer: prisma.Issuer;
  Query: {};
  Resource: prisma.Resource;
  Tag: prisma.Tag;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AssociationType: NexusGenEnums['AssociationType'];
  BloomLevel: NexusGenEnums['BloomLevel'];
  EntityType: NexusGenEnums['EntityType'];
}

export interface NexusGenFieldTypes {
  Association: { // field return type
    additionalProperties: string | null; // String
    associationType: NexusGenEnums['AssociationType']; // AssociationType!
    createdAt: any; // DateTime!
    entityId: string; // String!
    entityType: NexusGenEnums['EntityType']; // EntityType!
    id: string; // String!
    type: string; // String!
    updatedAt: any; // DateTime!
  }
  Competency: { // field return type
    additionalProperties: string | null; // String
    alternativeLabel: string | null; // String
    associations: NexusGenRootTypes['Association'][]; // [Association!]!
    bloomCategory: NexusGenEnums['BloomLevel'] | null; // BloomLevel
    CFDocumentURI: string | null; // String
    createdAt: any; // DateTime!
    defaultCredits: string | null; // String
    defaultPoints: string | null; // String
    description: string | null; // String
    endorsements: NexusGenRootTypes['Issuer'][]; // [Issuer!]!
    humanCodingScheme: string | null; // String
    id: string; // String!
    issuer: NexusGenRootTypes['Issuer']; // Issuer!
    name: string; // String!
    resources: NexusGenRootTypes['Resource'][]; // [Resource!]!
    sourcedId: string | null; // String
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    type: NexusGenEnums['EntityType']; // EntityType!
    updatedAt: any; // DateTime!
  }
  ConceptualCategory: { // field return type
    createdAt: any; // DateTime!
    description: string; // String!
    id: string; // String!
    issuer: NexusGenRootTypes['Issuer']; // Issuer!
    name: string; // String!
    updatedAt: any; // DateTime!
  }
  Course: { // field return type
    additionalProperties: string | null; // String
    alternativeLabel: string | null; // String
    associations: NexusGenRootTypes['Association'][]; // [Association!]!
    courseCode: string; // String!
    createdAt: any; // DateTime!
    defaultCredits: string; // String!
    defaultPoints: string | null; // String
    description: string; // String!
    endDate: any | null; // DateTime
    endorsements: NexusGenRootTypes['Issuer'][]; // [Issuer!]!
    id: string; // String!
    issuer: NexusGenRootTypes['Issuer']; // Issuer!
    name: string; // String!
    sourcedId: string | null; // String
    startDate: any | null; // DateTime
    type: NexusGenEnums['EntityType']; // EntityType!
    updatedAt: any; // DateTime!
  }
  Issuer: { // field return type
    additionalProperties: string | null; // String
    address: string | null; // String
    createdAt: any; // DateTime!
    id: string; // String!
    issuingPersonFullName: string; // String!
    issuingPersonTitle: string; // String!
    logo: string | null; // String
    name: string; // String!
    phone: string | null; // String
    type: string; // String!
    updatedAt: any; // DateTime!
    url: string; // String!
  }
  Query: { // field return type
    Competencies: NexusGenRootTypes['Competency'][]; // [Competency!]!
    Competency: NexusGenRootTypes['Competency'] | null; // Competency
    Course: NexusGenRootTypes['Course'] | null; // Course
    Courses: NexusGenRootTypes['Course'][]; // [Course!]!
    filterCompetencies: NexusGenRootTypes['Competency'][]; // [Competency!]!
    filterCourses: NexusGenRootTypes['Course'][]; // [Course!]!
  }
  Resource: { // field return type
    createdAt: any; // DateTime!
    description: string; // String!
    endorsements: NexusGenRootTypes['Issuer'][]; // [Issuer!]!
    id: string; // String!
    issuer: NexusGenRootTypes['Issuer']; // Issuer!
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    updatedAt: any; // DateTime!
    url: string; // String!
  }
  Tag: { // field return type
    conceptualCategory: NexusGenRootTypes['ConceptualCategory']; // ConceptualCategory!
    createdAt: any; // DateTime!
    id: string; // String!
    issuer: NexusGenRootTypes['Issuer']; // Issuer!
    name: string; // String!
    orderWithinCategory: number; // Int!
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Competency: {
    associations: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    endorsements: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    resources: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    tags: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Course: {
    associations: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    endorsements: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    Competency: { // args
      id?: string | null; // ID
    }
    Course: { // args
      id?: string | null; // ID
    }
    filterCompetencies: { // args
      searchString?: string | null; // String
    }
    filterCourses: { // args
      searchString?: string | null; // String
    }
  }
  Resource: {
    endorsements: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    tags: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Association" | "Competency" | "ConceptualCategory" | "Course" | "Issuer" | "Query" | "Resource" | "Tag";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "AssociationType" | "BloomLevel" | "EntityType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}