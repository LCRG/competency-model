/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AssociationWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  CompetencyWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  CourseWhereUniqueInput: { // input type
    courseCode?: string | null; // String
    id?: string | null; // String
  }
  PersonWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // String
    url?: string | null; // String
  }
  ResourceWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  TagWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  UnitTestWhereUniqueInput: { // input type
    id?: string | null; // String
  }
}

export interface NexusGenEnums {
  AssociationType: prisma.AssociationType
  BloomLevel: prisma.BloomLevel
  EntityType: prisma.EntityType
  PersonType: prisma.PersonType
}

export interface NexusGenRootTypes {
  Association: prisma.Association;
  Certificate: prisma.Certificate;
  Competency: prisma.Competency;
  Course: prisma.Course;
  Person: prisma.Person;
  Query: {};
  Resource: prisma.Resource;
  Tag: prisma.Tag;
  UnitTest: prisma.UnitTest;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  AssociationWhereUniqueInput: NexusGenInputs['AssociationWhereUniqueInput'];
  CompetencyWhereUniqueInput: NexusGenInputs['CompetencyWhereUniqueInput'];
  CourseWhereUniqueInput: NexusGenInputs['CourseWhereUniqueInput'];
  PersonWhereUniqueInput: NexusGenInputs['PersonWhereUniqueInput'];
  ResourceWhereUniqueInput: NexusGenInputs['ResourceWhereUniqueInput'];
  TagWhereUniqueInput: NexusGenInputs['TagWhereUniqueInput'];
  UnitTestWhereUniqueInput: NexusGenInputs['UnitTestWhereUniqueInput'];
  AssociationType: NexusGenEnums['AssociationType'];
  BloomLevel: NexusGenEnums['BloomLevel'];
  EntityType: NexusGenEnums['EntityType'];
  PersonType: NexusGenEnums['PersonType'];
}

export interface NexusGenFieldTypes {
  Association: { // field return type
    additionalProperties: string | null; // String
    associationType: NexusGenEnums['AssociationType']; // AssociationType!
    createdAt: any; // DateTime!
    entityId: string; // String!
    entityType: NexusGenEnums['EntityType']; // EntityType!
    id: string; // String!
    type: string; // String!
    updatedAt: any; // DateTime!
  }
  Certificate: { // field return type
    additionalProperties: string | null; // String
    alternativeLabel: string | null; // String
    areaOfStudy: string | null; // String
    associatedPersonnel: NexusGenRootTypes['Person'][]; // [Person!]!
    associations: NexusGenRootTypes['Association'][]; // [Association!]!
    createdAt: any; // DateTime!
    defaultCredits: string | null; // String
    defaultPoints: string | null; // String
    description: string | null; // String
    id: string; // String!
    level: string | null; // String
    name: string; // String!
    sourcedId: string | null; // String
    type: NexusGenEnums['EntityType']; // EntityType!
    updatedAt: any; // DateTime!
  }
  Competency: { // field return type
    additionalProperties: string | null; // String
    alternativeLabel: string | null; // String
    associatedPersonnel: NexusGenRootTypes['Person'][]; // [Person!]!
    associations: NexusGenRootTypes['Association'][]; // [Association!]!
    bloomCategory: NexusGenEnums['BloomLevel'] | null; // BloomLevel
    CFDocumentURI: string | null; // String
    courses: NexusGenRootTypes['Course'][]; // [Course!]!
    createdAt: any; // DateTime!
    defaultCredits: string | null; // String
    defaultPoints: string | null; // String
    description: string | null; // String
    humanCodingScheme: string | null; // String
    id: string; // String!
    name: string; // String!
    resources: NexusGenRootTypes['Resource'][]; // [Resource!]!
    sourcedId: string | null; // String
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    type: NexusGenEnums['EntityType']; // EntityType!
    updatedAt: any; // DateTime!
  }
  Course: { // field return type
    additionalProperties: string | null; // String
    alternativeLabel: string | null; // String
    associatedPersonnel: NexusGenRootTypes['Person'][]; // [Person!]!
    associations: NexusGenRootTypes['Association'][]; // [Association!]!
    courseCode: string; // String!
    createdAt: any; // DateTime!
    defaultCredits: string; // String!
    defaultPoints: string | null; // String
    description: string; // String!
    endDate: any | null; // DateTime
    id: string; // String!
    name: string; // String!
    sourcedId: string | null; // String
    startDate: any | null; // DateTime
    termsOffered: string | null; // String
    type: NexusGenEnums['EntityType']; // EntityType!
    updatedAt: any; // DateTime!
  }
  Person: { // field return type
    additionalProperties: string | null; // String
    address: string | null; // String
    associatedCourses: NexusGenRootTypes['Course'][]; // [Course!]!
    createdAt: any; // DateTime!
    email: string | null; // String
    id: string; // String!
    logo: string | null; // String
    name: string; // String!
    organization: string | null; // String
    phone: string | null; // String
    title: string | null; // String
    types: NexusGenEnums['PersonType'][]; // [PersonType!]!
    updatedAt: any; // DateTime!
    url: string; // String!
  }
  Query: { // field return type
    Competencies: NexusGenRootTypes['Competency'][]; // [Competency!]!
    Competency: NexusGenRootTypes['Competency'] | null; // Competency
    Course: NexusGenRootTypes['Course'] | null; // Course
    courseByCourseCode: NexusGenRootTypes['Course'] | null; // Course
    Courses: NexusGenRootTypes['Course'][]; // [Course!]!
  }
  Resource: { // field return type
    associatedPersonnel: NexusGenRootTypes['Person'][]; // [Person!]!
    createdAt: any; // DateTime!
    description: string; // String!
    id: string; // String!
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
    tests: NexusGenRootTypes['UnitTest'][]; // [UnitTest!]!
    updatedAt: any; // DateTime!
    url: string; // String!
    videoURL: string | null; // String
  }
  Tag: { // field return type
    associatedPersonnel: NexusGenRootTypes['Person'][]; // [Person!]!
    competencies: NexusGenRootTypes['Competency'][]; // [Competency!]!
    createdAt: any; // DateTime!
    description: string; // String!
    id: string; // String!
    name: string; // String!
    updatedAt: any; // DateTime!
  }
  UnitTest: { // field return type
    createdAt: any; // DateTime!
    id: string; // String!
    testString: string | null; // String
    text: string | null; // String
    title: string | null; // String
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Certificate: {
    associatedPersonnel: { // args
      after?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      before?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    associations: { // args
      after?: NexusGenInputs['AssociationWhereUniqueInput'] | null; // AssociationWhereUniqueInput
      before?: NexusGenInputs['AssociationWhereUniqueInput'] | null; // AssociationWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Competency: {
    associatedPersonnel: { // args
      after?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      before?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    associations: { // args
      after?: NexusGenInputs['AssociationWhereUniqueInput'] | null; // AssociationWhereUniqueInput
      before?: NexusGenInputs['AssociationWhereUniqueInput'] | null; // AssociationWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    courses: { // args
      after?: NexusGenInputs['CourseWhereUniqueInput'] | null; // CourseWhereUniqueInput
      before?: NexusGenInputs['CourseWhereUniqueInput'] | null; // CourseWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    resources: { // args
      after?: NexusGenInputs['ResourceWhereUniqueInput'] | null; // ResourceWhereUniqueInput
      before?: NexusGenInputs['ResourceWhereUniqueInput'] | null; // ResourceWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    tags: { // args
      after?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      before?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Course: {
    associatedPersonnel: { // args
      after?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      before?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    associations: { // args
      after?: NexusGenInputs['AssociationWhereUniqueInput'] | null; // AssociationWhereUniqueInput
      before?: NexusGenInputs['AssociationWhereUniqueInput'] | null; // AssociationWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Person: {
    associatedCourses: { // args
      after?: NexusGenInputs['CourseWhereUniqueInput'] | null; // CourseWhereUniqueInput
      before?: NexusGenInputs['CourseWhereUniqueInput'] | null; // CourseWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    Competencies: { // args
      searchString?: string | null; // String
    }
    Competency: { // args
      id?: string | null; // ID
    }
    Course: { // args
      id?: string | null; // ID
    }
    courseByCourseCode: { // args
      courseCode?: string | null; // String
    }
    Courses: { // args
      searchString?: string | null; // String
    }
  }
  Resource: {
    associatedPersonnel: { // args
      after?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      before?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    tags: { // args
      after?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      before?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    tests: { // args
      after?: NexusGenInputs['UnitTestWhereUniqueInput'] | null; // UnitTestWhereUniqueInput
      before?: NexusGenInputs['UnitTestWhereUniqueInput'] | null; // UnitTestWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Tag: {
    associatedPersonnel: { // args
      after?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      before?: NexusGenInputs['PersonWhereUniqueInput'] | null; // PersonWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    competencies: { // args
      after?: NexusGenInputs['CompetencyWhereUniqueInput'] | null; // CompetencyWhereUniqueInput
      before?: NexusGenInputs['CompetencyWhereUniqueInput'] | null; // CompetencyWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Association" | "Certificate" | "Competency" | "Course" | "Person" | "Query" | "Resource" | "Tag" | "UnitTest";

export type NexusGenInputNames = "AssociationWhereUniqueInput" | "CompetencyWhereUniqueInput" | "CourseWhereUniqueInput" | "PersonWhereUniqueInput" | "ResourceWhereUniqueInput" | "TagWhereUniqueInput" | "UnitTestWhereUniqueInput";

export type NexusGenEnumNames = "AssociationType" | "BloomLevel" | "EntityType" | "PersonType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}