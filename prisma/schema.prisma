datasource postgres {
  provider = "postgresql"
  url      = "postgresql://postgres:docker@localhost:5432/pg-comp-model?schema=public"
}

generator photon {
  provider = "prisma-client-js"
}

enum AssociationType {
  ExactMatchOf
  Precedes
  IsChildOf
  IsParentOf
  HasSkillLevel
  ReplacedBy
  IsPartOf
  Exemplar
  IsRelatedTo
  IsPeerOf
}

enum EntityType {
  Basic
  Competency
  Course
  Degree
  Certificate
  Assessment
  CoCurricular
}

enum BloomLevel {
  CREATE
  EVALUATE
  ANALYZE
  APPLY
  UNDERSTAND
  REMEMBER
  INFO
}

enum PersonType {
  Faculty
  Instructor
  TeachingAssistant
  AdjunctFaculty
  CourseMentor
  Teacher
  Evaluator
  Issuer
  Owner
  Representative
  Provider
  Employer
  Endorser
}

model Association {
  id                   String          @default(cuid()) @id
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt
  type                 String
  associationType      AssociationType
  entityType           EntityType
  entityId             String
  additionalProperties String?
}

model Certificate {
  id                   String        @default(cuid()) @id
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  type                 EntityType
  name                 String
  description          String?
  defaultCredits       String?
  defaultPoints        String?
  sourcedId            String?
  alternativeLabel     String?
  additionalProperties String?
  level                String?
  areaOfStudy          String?
  associatedPersonnel  Person[]
  associations         Association[]
}

model Competency {
  id                   String        @default(cuid()) @id
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  type                 EntityType
  name                 String
  description          String?
  defaultCredits       String?
  defaultPoints        String?
  sourcedId            String?
  courses              Course[]
  alternativeLabel     String?
  additionalProperties String?
  humanCodingScheme    String?
  CFDocumentURI        String?
  bloomCategory        BloomLevel?
  resources            Resource[]
  tags                 Tag[]
  associatedPersonnel  Person[]
  associations         Association[]
}

model Course {
  id                   String        @default(cuid()) @id
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  type                 EntityType    @default(Course)
  name                 String
  description          String
  defaultCredits       String
  defaultPoints        String?
  sourcedId            String?
  associations         Association[]
  alternativeLabel     String?
  additionalProperties String?
  courseCode           String        @unique
  startDate            DateTime?
  endDate              DateTime?
  termsOffered         String?
  associatedPersonnel  Person[]
}

model Person {
  id                   String       @default(cuid()) @id
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  name                 String
  types                PersonType[]
  organization         String?
  phone                String?
  address              String?
  email                String?      @unique
  url                  String       @unique
  logo                 String?
  title                String?
  additionalProperties String?
  associatedCourses    Course[]
}

model Resource {
  id                  String     @default(cuid()) @id
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  description         String
  url                 String
  tags                Tag[]
  associatedPersonnel Person[]
  videoURL            String?
  tests               UnitTest[]
}

model UnitTest {
  id         String   @default(cuid()) @id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  title      String?
  text       String?
  testString String?
}

model Tag {
  id                  String       @default(cuid()) @id
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  associatedPersonnel Person[]
  name                String
  competencies        Competency[]
  description         String
}